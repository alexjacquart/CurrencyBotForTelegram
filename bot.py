import asyncio
import nest_asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–∫—Å–∞—Ü–∏—é –¥–ª—è Render
nest_asyncio.apply()

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = "8064353519:AAGqu6DXLbldnJLJ6OlkxqWH5d4xYbfycI8"

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
current_rate = 100.00  # –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ USDT/RUB.\n"
        "üìå –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å: /getrate\n"
        "‚úç –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å: /setrate <–∫—É—Ä—Å>"
    )

# –ö–æ–º–∞–Ω–¥–∞ /getrate
async def get_rate(update: Update, context: CallbackContext):
    await update.message.reply_text(f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 USDT = {current_rate} RUB")

# –ö–æ–º–∞–Ω–¥–∞ /setrate (–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞)
async def set_rate(update: Update, context: CallbackContext):
    global current_rate
    try:
        rate = float(context.args[0])  # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
        current_rate = rate
        await update.message.reply_text(f"‚úÖ –ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω: 1 USDT = {current_rate} RUB")
    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π: /setrate <–∫—É—Ä—Å>")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)
async def main():
    app = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("getrate", get_rate))
    app.add_handler(CommandHandler("setrate", set_rate))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())  # –ë–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ event loop
